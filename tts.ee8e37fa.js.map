{"version":3,"sources":["tts/questions.json","tts/tts.js"],"names":["module","exports","clue","answer","orderArr","questionNumber","shuffle","array","i","length","j","Math","floor","random","temp","init","$","each","data","index","push","console","log","loadClues","eq","find","attr","board","wordArr","wordBank","wordsActive","boardMap","clues","focusChar","wordElementsAcross","wordElementsDown","focusIndex","Bounds","top","right","bottom","left","Update","x","y","min","max","Clean","Play","charEleArr","document","getElementsByClassName","RegisterChar","placeholder","HideInputBoxes","FormatClues","createClueHTML","wordElement","clueElement","createElement","className","lineNumSpan","innerHTML","num","clueSpan","wordCountSpan","appendChild","cluesAcross","getElementById","cluesDown","Generate","CleanVars","canBuild","PopulateBoard","BoardToHtml","classList","remove","w","d","dir","char","AddClass","disabled","RemoveClass","hasWhiteSpace","s","test","getWordCount","word","words","split","wordCount","toString","GetWordsFromInput","val","value","toUpperCase","ele","replace","PrepareBoard","boardisValid","len","AddWordToBoard","createcObj","currentWordIndex","prevObj","currentChar","wordIndex","prev","next","WordObj","wA","k","cA","l","wB","totalMatches","curIndex","curWord","curChar","testWord","curMatchDiff","successfulMatches","effectiveMatches","lenJ","lenK","lenL","curCross","isMatch","m","lenM","crossVal","xIndex","yIndex","error","currentWordActive","updateWordInfo","splice","addCharInfoToBoard","activeWord","currentActiveWord","matchArr","matchData","pushIndex","xInd","yInd","cObj","cIndex","boardHTML","BoardCharToElement","c","inner","currentwordIndex","element","string","EleStr","a","v","BoardCharClick","boardChar","BoardCharFocus","indexOf","inputBoxes","onkeydown","e","key","keyCode","which","focus","onkeyup","prevChar","oninput","nextChar","inputType","wordData","RegisterEvents","addEventListener","onclick","CreateCallback","onfocus","type","h","ArrayToString","r","classStr","replaceAll","ToggleClass","str","String","prototype","replaceThis","withThis","re","RegExp","on","blur","removeClass","addClass","filter"],"mappings":"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","file":"tts.ee8e37fa.js","sourceRoot":"..\\src","sourcesContent":["module.exports=[{clue:\"Bulan Hari Oeang\",answer:\"Oktober\"},{clue:\"Bulan Kemerdekaan\",answer:\"agustus\"},{clue:\"Nama Kabupaten di Jawa Tengah\",answer:\"batang\"},{clue:\"Nilai Tukar Mata Uang\",answer:\"kurs\"},{clue:\"Mata Uang Asing\",answer:\"valas\"},{clue:\"Asal Kata Rupliah\",answer:\"rupiya\"},{clue:\"Material Uang Koin\",answer:\"alumunium\"},{clue:\"Seribu Rupiah\",answer:\"ceban\"},{clue:\"Kenaikan harga-harga\",answer:\"inflasi\"},{clue:\"Pemotongan Nilai Mata Uang\",answer:\"sanering\"},{clue:\"Barang ditukar Barang\",answer:\"barter\"},{clue:\"Oeang Republik Indonesia\",answer:\"ori\"},{clue:\"Perusahaan Pencetak Rupiah\",answer:\"peruri\"},{clue:\"Salah Satu Jenis Pajak\",answer:\"PPNBM\"},{clue:\"Tari di uang Rp10.000\",answer:\"pakarena\"},{clue:\"Tari di uang Rp50.000\",answer:\"legong\"},{clue:\"Pulau Terluar Indonesia\",answer:\"miangas\"},{clue:\"Lambang Negara\",answer:\"garuda\"},{clue:\"Organisasi Perdagangan Internasinal\",answer:\"who\"},{clue:\"Laut\",answer:\"bahari\"},{clue:\"Kepulauan (Ingg)\",answer:\"archipelaho\"},{clue:\"Pandangan Atau Wawasan\",answer:\"visi\"},{clue:\"Bentuk Negara\",answer:\"republik\"},{clue:\"Bagian laba u/ pemegang saham\",answer:\"dividen\"},{clue:\"Mata Uang Digital\",answer:\"bitcoin\"},{clue:\"Kecerdasan Buatan\",answer:\"AI\"},{clue:\"Penanaman modal\",answer:\"investasi\"},{clue:\"Ibukota Papua Barat\",answer:\"manokwari\"},{clue:\"Aparatur Pajak\",answer:\"fiskus\"},{clue:\"Teknologi Keuangan\",answer:\"fintech\"},{clue:\"Jenis Surat Berharga Negawa\",answer:\"sbsn\"},{clue:\"Surat Utang\",answer:\"obligasi\"},{clue:\"Kepemilikan modal\",answer:\"saham\"},{clue:\"Aparat Pengawas Internal Pemerintah\",answer:\"apip\"},{clue:\"Pemeriksaan\",answer:\"audit\"},{clue:\"Uang\",answer:\"duit\"},{clue:\"1/100\",answer:\"sen\"},{clue:\"Logam Mulia\",answer:\"perak\"},{clue:\"Nama Kerajaan\",answer:\"majapahit\"},{clue:\"Nama Kota di Jabar\",answer:\"garut\"},{clue:\"Lembaga Beasiswa\",answer:\"lpdp\"},{clue:\"Mesin Pencari\",answer:\"google\"},{clue:\"Perusahaan Dagang Kolonial\",answer:\"voc\"},{clue:\"Tanjung... (Ibukota Kaltara)\",answer:\"selor\"},{clue:\"Jenis Pendanaan\",answer:\"hibah\"},{clue:\"Danan di Sumbar\",answer:\"maninjau\"},{clue:\"Rumah Adat Jawa\",answer:\"joglo\"},{clue:\"Tokoh Pewayangan\",answer:\"arjuna\"},{clue:\"Asia Tenggara\",answer:\"asean\"},{clue:\"Slogan APBN\",answer:\"uangkita\"}];","import * as data from './questions.json';\r\nvar orderArr = [];\r\nvar questionNumber = 10;\r\n\r\nconsole.log(data);\r\n\r\nfunction shuffle(array) {\r\n  for (var i = array.length - 1; i > 0; i--) {\r\n    var j = Math.floor(Math.random() * (i + 1));\r\n    var temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction init() {\r\n  $.each(data, function(index) {\r\n    orderArr.push(index);\r\n    shuffle(orderArr);\r\n  });\r\n  console.log(orderArr); \r\n  loadClues() \r\n};\r\n\r\ninit();\r\n\r\nfunction loadClues() {\r\n  for (let i = 0; i < questionNumber; i++) {\r\n    //$(\"#cluesAcross\").append(\"<div class='line'><input class='word' type='text' value=\"+ data[orderArr[i]].answer+\"/><span class='lineNum'></span><input class='clue' value=\"+ data[orderArr[i]].clue+\" />\");\r\n    $(\".line\").eq(i).find(\"input.word\").attr(\"value\", data[orderArr[i]].answer);\r\n    $(\".line\").eq(i).find(\"input.clue\").attr(\"value\", data[orderArr[i]].clue);\r\n  } \r\n};\r\n    \r\n\r\n\r\n//---------------------------------//\r\n//   GLOBAL VARIABLES              //\r\n//---------------------------------//\r\nvar board, wordArr, wordBank, wordsActive, boardMap, clues,\r\n  focusChar, focusIndex = null,\r\n  wordElementsAcross, wordElementsDown;\r\n\r\nvar Bounds = {\r\n  top: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  left: 0,\r\n\r\n  Update: function(x, y) {\r\n    this.top = Math.min(y, this.top);\r\n    this.right = Math.max(x, this.right);\r\n    this.bottom = Math.max(y, this.bottom);\r\n    this.left = Math.min(x, this.left);\r\n  },\r\n\r\n  Clean: function() {\r\n    this.top = 999;\r\n    this.right = 0;\r\n    this.bottom = 0;\r\n    this.left = 999;\r\n  }\r\n};\r\n\r\n//---------------------------------//\r\n//   MAIN                          //\r\n//---------------------------------//\r\n\r\nfunction Play() {\r\n  var charEleArr = document.getElementsByClassName('char');\r\n\r\n  for (var i = 0; i < charEleArr.length; i++) {\r\n    //register character click and focus events\r\n    RegisterChar(charEleArr[i], boardMap[i]);\r\n    charEleArr[i].placeholder = \"\";\r\n  }\r\n\r\n  HideInputBoxes();\r\n\r\n  FormatClues();\r\n}\r\n\r\n/*\r\n * @param {Object} wordElement\r\n * @param {string} wordElement.num - clue number\r\n * @param {string} wordElement.clue - clue text\r\n * @param {string} wordElement.wordCount - word count of answer\r\n */\r\n\r\nfunction createClueHTML(wordElement) {\r\n\r\n  //create clue holder\r\n  var clueElement = document.createElement('div');\r\n  clueElement.className += \" line\";\r\n\r\n  //add line number\r\n  var lineNumSpan = document.createElement('span');\r\n  lineNumSpan.innerHTML = wordElement.num + '. ';\r\n  lineNumSpan.className += \" lineNum\";\r\n\r\n  //add clue\r\n  var clueSpan = document.createElement('span');\r\n  clueSpan.innerHTML = wordElement.clue;\r\n  clueSpan.className += \" cluesentence\";\r\n\r\n  //add word count\r\n  var wordCountSpan = document.createElement('span');\r\n//   wordCountSpan.innerHTML = ' (' + wordElement.wordCount + ')';\r\n  wordCountSpan.className += \" wordCount\";\r\n\r\n  clueElement.appendChild(lineNumSpan);\r\n  clueElement.appendChild(clueSpan);\r\n  clueElement.appendChild(wordCountSpan);\r\n\r\n  return clueElement;\r\n}\r\n\r\nfunction FormatClues() {\r\n\r\n  var cluesAcross = document.getElementById(\"cluesAcross\");\r\n  var cluesDown = document.getElementById(\"cluesDown\");\r\n\r\n  cluesAcross.innerHTML = \"\";\r\n  cluesDown.innerHTML = \"\";\r\n\r\n  var clueElement = \"\";\r\n\r\n  for (var i = 0; i < wordElementsAcross.length; i++) {\r\n\r\n    clueElement = createClueHTML(wordElementsAcross[i]);\r\n    cluesAcross.appendChild(clueElement);\r\n\r\n  }\r\n\r\n  for (var j = 0; j < wordElementsDown.length; j++) {\r\n\r\n    clueElement = createClueHTML(wordElementsDown[j]);\r\n    cluesDown.appendChild(clueElement);\r\n\r\n  }\r\n\r\n}\r\n\r\nfunction Generate() {\r\n  wordElementsAcross = [];\r\n  wordElementsDown = [];\r\n\r\n  CleanVars();\r\n  var canBuild = PopulateBoard();\r\n\r\n  while (!canBuild) {\r\n\r\n    CleanVars();\r\n    canBuild = PopulateBoard();\r\n\r\n  }\r\n\r\n  document.getElementById(\"crossword\").innerHTML =\r\n    canBuild ? BoardToHtml() : \"Failed to find crossword.\";\r\n\r\n  document.getElementById('btnHint').classList.remove('disabled');\r\n}\r\n\r\nfunction HideInputBoxes() {\r\n  var w = document.getElementsByClassName('word'),\r\n    d = document.getElementsByClassName('clue'),\r\n    dir = document.getElementsByClassName('clueDirection'),\r\n    char = document.getElementsByClassName('char');\r\n\r\n  for (var i = 0; i < w.length; i++) {\r\n    AddClass(w[i], 'hide');\r\n    AddClass(d[i], 'hide');\r\n    AddClass(d[i], 'clueReadOnly');\r\n\r\n    d[i].disabled = 'readonly';\r\n  }\r\n\r\n  for (var i = 0; i < dir.length; i++) {\r\n    RemoveClass(dir[i], 'disabled');\r\n  }\r\n\r\n  for (var i = 0; i < char.length; i++) {\r\n    RemoveClass(char[i], 'charReadOnly');\r\n    char[i].disabled = '';\r\n  }\r\n\r\n}\r\n\r\nfunction hasWhiteSpace(s) {\r\n  return /\\s/g.test(s);\r\n}\r\n/*\r\n * get the length of the clues as a string\r\n * @param {string}\r\n * @return {string}\r\n */\r\nfunction getWordCount(word) {\r\n\r\n  if (hasWhiteSpace(word)) {\r\n    var words = word.split(/\\s/g);\r\n    var wordCount = \"\";\r\n\r\n    for (var i = 0; i < words.length; i++) {\r\n      //last word\r\n      if (i === words.length - 1) {\r\n        wordCount = wordCount + words[i].length;\r\n      }\r\n      //other words\r\n      else {\r\n        wordCount = wordCount + words[i].length + ', ';\r\n      }\r\n    }\r\n    return wordCount;\r\n  } else {\r\n    return word.length.toString();\r\n  }\r\n\r\n}\r\n\r\nfunction GetWordsFromInput() {\r\n\r\n  var clues = document.getElementsByClassName(\"line\");\r\n\r\n  wordArr = [];\r\n\r\n  for (var i = clues.length - 1; i >= 0; i--) {\r\n\r\n    var val = clues[i].getElementsByClassName(\"word\")[0].value.toUpperCase();\r\n    var clue = clues[i].getElementsByClassName(\"clue\")[0].value;\r\n    var wordCount = getWordCount(val);\r\n    if (val !== null && val.length > 1) {\r\n      wordArr.push({\r\n        ele: clues[i],\r\n        value: val.replace(' ', ''),\r\n        clue: clue,\r\n        wordCount: wordCount\r\n\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction CleanVars() {\r\n  Bounds.Clean();\r\n  wordBank = [];\r\n  wordsActive = [];\r\n  clues = [];\r\n  board = [];\r\n\r\n  for (var i = 0; i < 50; i++) {\r\n    board.push([]);\r\n    for (var j = 0; j < 50; j++) {\r\n      board[i].push({\r\n        value: null,\r\n        char: []\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction PopulateBoard() {\r\n\r\n  PrepareBoard();\r\n\r\n  var boardisValid = false;\r\n  var len = wordBank.length;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n\r\n    boardisValid = AddWordToBoard();\r\n\r\n    if (!boardisValid) {\r\n      return boardisValid;\r\n    }\r\n\r\n  }\r\n\r\n  return boardisValid;\r\n}\r\n\r\n/*\r\n@param {Number} currentWordIndex\r\n@param {Object} prevObj\r\n@param {String} currentChar\r\n@returns {Object} cObj - values for the character square\r\n*/\r\nfunction createcObj(currentWordIndex, prevObj, currentChar) {\r\n\r\n  return {\r\n    wordIndex: currentWordIndex,\r\n    prev: prevObj,\r\n    value: currentChar,\r\n    next: null\r\n  };\r\n\r\n}\r\n\r\nfunction PrepareBoard() {\r\n  wordBank = [];\r\n\r\n  for (var i = 0, len = wordArr.length; i < len; i++) {\r\n\r\n    wordBank.push(new WordObj(wordArr[i]));\r\n\r\n  }\r\n\r\n  for (i = 0; i < wordBank.length; i++) {\r\n    for (var j = 0, wA = wordBank[i]; j < wA.char.length; j++) {\r\n      for (var k = 0, cA = wA.char[j]; k < wordBank.length; k++) {\r\n        for (var l = 0, wB = wordBank[k]; k !== i && l < wB.char.length; l++) {\r\n          wA.totalMatches += (cA === wB.char[l]) ? 1 : 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// TODO: Clean this guy up\r\nfunction AddWordToBoard() {\r\n  var i, len, curIndex, curWord, curChar, testWord, testChar, minMatchDiff = 9999,\r\n    curMatchDiff;\r\n\r\n  //first word\r\n  if (wordsActive.length < 1) {\r\n    curIndex = 0;\r\n    for (i = 0, len = wordBank.length; i < len; i++) {\r\n      if (wordBank[i].totalMatches < wordBank[curIndex].totalMatches) {\r\n        curIndex = i;\r\n      }\r\n    }\r\n    wordBank[curIndex].successfulMatches = [{\r\n      x: 12,\r\n      y: 12,\r\n      dir: 0\r\n    }];\r\n  }\r\n  //others\r\n  else {\r\n    curIndex = -1;\r\n\r\n    for (i = 0, len = wordBank.length; i < len; i++) {\r\n      curWord = wordBank[i];\r\n      curWord.effectiveMatches = 0;\r\n      curWord.successfulMatches = [];\r\n      for (var j = 0, lenJ = curWord.char.length; j < lenJ; j++) {\r\n        curChar = curWord.char[j];\r\n        for (var k = 0, lenK = wordsActive.length; k < lenK; k++) {\r\n          testWord = wordsActive[k];\r\n          for (var l = 0, lenL = testWord.char.length; l < lenL; l++) {\r\n            testChar = testWord.char[l];\r\n            if (curChar === testChar) {\r\n              curWord.effectiveMatches++;\r\n              var curCross = {\r\n                x: testWord.x,\r\n                y: testWord.y,\r\n                dir: 0\r\n              };\r\n              if (testWord.dir === 0) {\r\n                curCross.dir = 1;\r\n                curCross.x += l;\r\n                curCross.y -= j;\r\n              } else {\r\n                curCross.dir = 0;\r\n                curCross.y += l;\r\n                curCross.x -= j;\r\n              }\r\n\r\n              var isMatch = true;\r\n\r\n              for (var m = -1, lenM = curWord.char.length + 1; m < lenM; m++) {\r\n                var crossVal = [];\r\n                if (m !== j) {\r\n                  if (curCross.dir === 0) {\r\n                    var xIndex = curCross.x + m;\r\n\r\n                    if (xIndex < 0 || xIndex > board.length - 1) {\r\n                      isMatch = false;\r\n                      break;\r\n                    }\r\n\r\n                    crossVal.push(board[xIndex][curCross.y].value);\r\n                    crossVal.push(board[xIndex][curCross.y + 1].value);\r\n                    crossVal.push(board[xIndex][curCross.y - 1].value);\r\n\r\n                  } else {\r\n                    var yIndex = curCross.y + m;\r\n\r\n                    if (yIndex < 0 || yIndex > board[curCross.x].length - 1) {\r\n                      isMatch = false;\r\n                      break;\r\n                    }\r\n\r\n                    if (typeof board[curCross.x] == 'undefined') {\r\n                      console.error(board[curCross.x]);\r\n                    }\r\n                    if (typeof board[curCross.x][yIndex] == 'undefined') {\r\n                      console.error(board[curCross.x][yIndex]);\r\n                    }\r\n\r\n                    crossVal.push(board[curCross.x][yIndex].value);\r\n                    crossVal.push(board[curCross.x + 1][yIndex].value);\r\n                    crossVal.push(board[curCross.x - 1][yIndex].value);\r\n                  }\r\n\r\n                  if (m > -1 && m < lenM - 1) {\r\n                    if (crossVal[0] !== curWord.char[m]) {\r\n                      if (crossVal[0] !== null) {\r\n                        isMatch = false;\r\n                        break;\r\n                      } else if (crossVal[1] !== null) {\r\n                        isMatch = false;\r\n                        break;\r\n                      } else if (crossVal[2] !== null) {\r\n                        isMatch = false;\r\n                        break;\r\n                      }\r\n                    }\r\n                  } else if (crossVal[0] !== null) {\r\n                    isMatch = false;\r\n                    break;\r\n                  }\r\n                }\r\n              }\r\n\r\n              if (isMatch === true) {\r\n                curWord.successfulMatches.push(curCross);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      curMatchDiff = curWord.totalMatches - curWord.effectiveMatches;\r\n\r\n      if (curMatchDiff < minMatchDiff && curWord.successfulMatches.length > 0) {\r\n        curMatchDiff = minMatchDiff;\r\n        curIndex = i;\r\n      } else if (curMatchDiff <= 0) {\r\n        return false;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  if (curIndex === -1) {\r\n    return false;\r\n  }\r\n\r\n  var word = wordBank.splice(curIndex, 1);\r\n\r\n  var currentWordActive = updateWordInfo(word);\r\n\r\n  wordsActive.push(currentWordActive);\r\n\r\n  var wordisAdded = addCharInfoToBoard(currentWordActive);\r\n\r\n  if (!wordisAdded) {\r\n    return false;\r\n  }\r\n\r\n  if (Bounds.right >= 37) {\r\n    // console.log('%cCrossword is too wide', 'color:red;font-size: 16px;');\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n\r\n}\r\n/*\r\n * @param {Number} word - index of the current word \r\n * @return {Object} activeWord \r\n */\r\nfunction updateWordInfo(activeWord) {\r\n\r\n  var currentActiveWord = activeWord[0];\r\n\r\n  var matchArr = currentActiveWord.successfulMatches;\r\n  var matchIndex = Math.floor(Math.random() * matchArr.length);\r\n  var matchData = matchArr[matchIndex];\r\n\r\n  currentActiveWord.x = matchData.x;\r\n  currentActiveWord.y = matchData.y;\r\n  currentActiveWord.dir = matchData.dir;\r\n\r\n  return currentActiveWord;\r\n}\r\n\r\nfunction addCharInfoToBoard(currentWordActive) {\r\n\r\n  var pushIndex = wordsActive.length - 1;\r\n\r\n  var prevObj = null;\r\n\r\n  for (var i = 0; i < currentWordActive.char.length; i++) {\r\n\r\n    var xInd = currentWordActive.x;\r\n    var yInd = currentWordActive.y;\r\n\r\n    if (currentWordActive.dir === 0) {\r\n      xInd = xInd + i;\r\n    } else {\r\n      yInd = yInd + i;\r\n    }\r\n\r\n    if (xInd >= 36) {\r\n      // console.log('%cCrossword will be too wide', 'color:orange;font-size: 16px;font-style: bold;');\r\n      return false;\r\n    }\r\n\r\n    var cObj = createcObj(pushIndex, prevObj, currentWordActive.char[i]);\r\n\r\n    var cIndex = board[xInd][yInd].char.length;\r\n\r\n    board[xInd][yInd].char.push(cObj);\r\n    board[xInd][yInd].value = currentWordActive.char[i];\r\n\r\n    Bounds.Update(xInd, yInd);\r\n\r\n    if (prevObj !== null) {\r\n      prevObj.next = board[xInd][yInd].char[cIndex];\r\n    }\r\n\r\n    prevObj = board[xInd][yInd].char[cIndex];\r\n  }\r\n\r\n  prevObj = null;\r\n  return true;\r\n\r\n}\r\n\r\nfunction BoardToHtml() {\r\n\r\n  boardMap = [];\r\n\r\n  var boardHTML = '';\r\n\r\n  for (var i = Bounds.top - 1; i < Bounds.bottom + 2; i++) {\r\n    boardHTML += \"<div class='row'>\";\r\n\r\n    for (var j = Bounds.left - 1; j < Bounds.right + 2; j++) {\r\n      boardHTML += BoardCharToElement(board[j][i]);\r\n    }\r\n    boardHTML += \"</div>\";\r\n  }\r\n  return boardHTML;\r\n\r\n}\r\n\r\n/*\r\n * @param {Object} c - values for a sqaure of the board\r\n * @param {string} c.value - character string for the square. \r\n * @param {Array} c.char - list of character strings for the square. \r\n * length of c.char is 0, 1 or 2. \r\n * length is 2 when 2 words cross\r\n */\r\n\r\nfunction BoardCharToElement(c) {\r\n\r\n  var inner = \"\";\r\n\r\n  if (c.value !== null) {\r\n    var num = \"\";\r\n\r\n    for (var i = 0; i < c.char.length; i++) {\r\n\r\n      var currentChar = c.char[i];\r\n      currentChar.index = boardMap.length;\r\n      if (currentChar.prev === null) {\r\n\r\n        var currentwordIndex = currentChar.wordIndex;\r\n\r\n        if (num === \"\") {\r\n          num = wordElementsDown.length + wordElementsAcross.length + 1;\r\n        }\r\n\r\n        if (wordsActive[currentwordIndex].dir === 0) {\r\n          wordElementsAcross.push({\r\n            num: num,\r\n            ele: wordsActive[currentwordIndex].element,\r\n            clue: wordsActive[currentwordIndex].clue,\r\n            answer: wordsActive[currentwordIndex].string,\r\n            wordCount: wordsActive[currentwordIndex].wordCount\r\n          });\r\n        } else {\r\n          wordElementsDown.push({\r\n            num: num,\r\n            ele: wordsActive[currentwordIndex].element,\r\n            clue: wordsActive[currentwordIndex].clue,\r\n            answer: wordsActive[currentwordIndex].string,\r\n            wordCount: wordsActive[currentwordIndex].wordCount\r\n          });\r\n        }\r\n      }\r\n    }\r\n    boardMap.push(c);\r\n\r\n    inner = EleStr('input', [{\r\n        a: 'type',\r\n        v: ['text']\r\n      }, {\r\n        a: 'class',\r\n        v: ['char']\r\n      }, {\r\n        a: 'maxlength',\r\n        v: ['1']\r\n      }, {\r\n        a: 'data-letter',\r\n        v: [c.value]\r\n      }, {\r\n        a: 'data-hint',\r\n        v: [c.value]\r\n      }, {\r\n        a: 'placeholder',\r\n        v: [c.value]\r\n      }],\r\n      EleStr('span', [{\r\n        a: 'class',\r\n        v: ['num']\r\n      }], num));\r\n  }\r\n  return EleStr('div', [{\r\n    a: 'class',\r\n    v: ['square']\r\n  }], inner);\r\n}\r\n/*\r\n * @param {Object} boardChar\r\n * @param {string} boardChar.value\r\n * @param {array} boardChar.char\r\n */\r\nfunction BoardCharClick(boardChar) {\r\n\r\n  if (boardChar.char.length > 1) {\r\n    if (focusIndex >= boardChar.char.length - 1) {\r\n      focusIndex = 0;\r\n    } else {\r\n      focusIndex++;\r\n    }\r\n  }\r\n}\r\n/*\r\n * @param {Object} boardChar\r\n * @param {string} boardChar.value\r\n * @param {array} boardChar.char\r\n */\r\nfunction BoardCharFocus(boardChar) {\r\n\r\n  if (!(boardChar.char[focusIndex] && boardChar.char[focusIndex].prev === focusChar)) {\r\n    focusIndex = Math.max(0, boardChar.char.indexOf(focusChar));\r\n  }\r\n\r\n  var inputBoxes = document.getElementsByClassName('char');\r\n\r\n  //navigation via arrow keys\r\n  this.onkeydown = function(e) {\r\n\r\n    var key = e.keyCode || e.which;\r\n\r\n    //left arrow or up - focus on prev square\r\n    if (key === 37 || key === 38) {\r\n      if (boardChar.char[focusIndex].prev != null) {\r\n        focusChar = boardChar.char[focusIndex].prev;\r\n        inputBoxes[focusChar.index].focus();\r\n      }\r\n    }\r\n\r\n    //right arrow or down - focus on next square\r\n    if (key === 39 || key === 40) {\r\n      if (boardChar.char[focusIndex].next != null) {\r\n        focusChar = boardChar.char[focusIndex].next;\r\n        inputBoxes[focusChar.index].focus();\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  this.onkeyup = function(e) {\r\n\r\n    var key = e.keyCode || e.which;\r\n\r\n    var prevChar = boardChar.char[focusIndex].prev;\r\n\r\n    //backspace and not first letter\r\n    if (key === 8 && prevChar != null) {\r\n      RemoveClass(inputBoxes[boardChar.char[focusIndex].index], 'correct');\r\n      inputBoxes[prevChar.index].focus();\r\n\r\n    }\r\n    //backspace and is first letter\r\n    if (key === 8 && prevChar === null) {\r\n      RemoveClass(inputBoxes[boardChar.char[focusIndex].index], 'correct');\r\n    }\r\n\r\n  };\r\n\r\n  this.oninput = function(e) {\r\n\r\n    var nextChar = boardChar.char[focusIndex].next;\r\n\r\n    //backspace at end of word\r\n    if (e.inputType === 'deleteContentBackward' && nextChar === null) {\r\n\r\n      inputBoxes[boardChar.char[focusIndex].index].value = \"\";\r\n\r\n      RemoveClass(inputBoxes[boardChar.char[focusIndex].index], 'correct');\r\n\r\n    }\r\n\r\n    //normal text entry\r\n    if (e.inputType !== 'deleteContentBackward' && nextChar !== null) {\r\n\r\n      inputBoxes[nextChar.index].focus();\r\n\r\n      RemoveClass(inputBoxes[boardChar.char[focusIndex].index], 'correct');\r\n\r\n    }\r\n\r\n  };\r\n}\r\n\r\n//---------------------------------//\r\n//   OBJECT DEFINITIONS            //\r\n//---------------------------------//\r\n\r\nfunction WordObj(wordData) {\r\n  this.element = wordData.ele;\r\n  this.string = wordData.value;\r\n  this.char = wordData.value.split(\"\");\r\n  this.totalMatches = 0;\r\n  this.effectiveMatches = 0;\r\n  this.successfulMatches = [];\r\n  this.clue = wordData.clue;\r\n  this.wordCount = wordData.wordCount;\r\n}\r\n\r\n//---------------------------------//\r\n//   EVENTS                        //\r\n//---------------------------------//\r\n\r\nfunction RegisterEvents() {\r\n\r\n  document.getElementById(\"btnReset\").addEventListener(\r\n    'click',\r\n    function() {\r\n      Generate();\r\n      Play();\r\n\r\n    }, false);\r\n\r\n}\r\nRegisterEvents();\r\n\r\nfunction RegisterChar(ele, boardChar) {\r\n  ele.onclick = CreateCallback(\"click\", boardChar);\r\n  ele.onfocus = CreateCallback(\"focus\", boardChar);\r\n}\r\n\r\nfunction CreateCallback(type, boardChar) {\r\n  switch (type) {\r\n    case \"click\":\r\n      return function() {\r\n        BoardCharClick(boardChar);\r\n      };\r\n    case \"focus\":\r\n      return function() {\r\n        BoardCharFocus(boardChar);\r\n      };\r\n  }\r\n}\r\n\r\n//---------------------------------//\r\n//   HELPER FUNCTIONS              //\r\n//---------------------------------//\r\n\r\nfunction EleStr(e, c, h) {\r\n  h = (h) ? h : \"\";\r\n  for (var i = 0, s = \"<\" + e + \" \"; i < c.length; i++) {\r\n    s += c[i].a + \"='\" + ArrayToString(c[i].v, \" \") + \"' \";\r\n  }\r\n  return (s + \">\" + h + \"</\" + e + \">\");\r\n}\r\n\r\nfunction ArrayToString(a, s) {\r\n  if (a === null || a.length < 1) return \"\";\r\n  if (s === null) s = \",\";\r\n  for (var r = a[0], i = 1; i < a.length; i++) {\r\n    r += s + a[i];\r\n  }\r\n  return r;\r\n}\r\n\r\nfunction AddClass(ele, classStr) {\r\n  ele.className = ele.className.replaceAll(' ' + classStr, '') + ' ' + classStr;\r\n}\r\n\r\nfunction RemoveClass(ele, classStr) {\r\n  ele.className = ele.className.replaceAll(' ' + classStr, '');\r\n}\r\n\r\nfunction ToggleClass(ele, classStr) {\r\n  var str = ele.className.replaceAll(' ' + classStr, '');\r\n  ele.className = (str.length === ele.className.length) ? str + ' ' + classStr : str;\r\n}\r\n\r\nString.prototype.replaceAll = function(replaceThis, withThis) {\r\n  var re = new RegExp(replaceThis, \"g\");\r\n  return this.replace(re, withThis);\r\n};\r\n\r\n//==================================================//\r\n\r\n$(\"#btnCheck\").on('click', function() {\r\n  $(this).blur();\r\n  //clear values from incorrect boxes\r\n  $(\".square input\").each(function() {\r\n    if ($(this).attr('data-letter') !== $(this).val().toUpperCase()) {\r\n      $(this).val('');\r\n      $(this).removeClass('correct');\r\n\r\n    } else {\r\n      $(this).addClass('correct');\r\n    }\r\n  });\r\n});\r\n\r\n$('#btnHint').on('click', function() {\r\n  // Change this number to reveal more or less answers\r\n  var hintFrequency = 8;\r\n\r\n  $(this).addClass('disabled');\r\n\r\n  var hints = $(\"[data-letter]\").filter(function(index) {\r\n    return (index + 1) % hintFrequency == 0;\r\n  });\r\n\r\n  hints.each(function() {\r\n    $(this).val($(this).attr('data-letter')).addClass('correct');\r\n\r\n  });\r\n});\r\n\r\n$(function() {\r\n  GetWordsFromInput();\r\n  Generate();\r\n  Play();\r\n});"]}